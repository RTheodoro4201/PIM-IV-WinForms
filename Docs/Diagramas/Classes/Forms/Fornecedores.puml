@startuml
package Forms
{
    package Fornecedores
    {
        class AlteraFornecedorForm {
          - FornecedorController _fornecedorController
          - int _fornecedorId
          + AlteraFornecedorForm(FornecedorController fornecedorController, int fornecedorId)
          + void ResizeForm(object sender, EventArgs e)
          + async void AlteraFornecedorForm_Load(object sender, EventArgs e)
          - void PopulaCampos(Endereco endereco, Fornecedor fornecedor)
          - void VerificarTipoFornecedor(object sender, EventArgs e)
          - void dateDataInicial_ValueChanged(object sender, EventArgs e)
          - void VerificarDataInicial()
          - async void btnSalvar_Click(object sender, EventArgs e)
          - void btnCancelar_Click(object sender, EventArgs e)
        }

        class CadastroFornecedorForm {
          - FornecedorController _fornecedorController
          - string _tipoFornecedor
          + CadastroFornecedorForm(FornecedorController fornecedorController, string tipoFornecedor)
          + void ResizeForm(object sender, EventArgs e)
          + void CadastroFornecedorForm_Load(object sender, EventArgs e)
          - void VerificarTipoFornecedor(object sender, EventArgs e)
          - void dateDataInicial_ValueChanged(object sender, EventArgs e)
          - void VerificarDataInicial()
          - async void btnSalvar_Click(object sender, EventArgs e)
          - void btnCancelar_Click(object sender, EventArgs e)
        }

        class ConsultaFornecedorForm {
          - FornecedorController _fornecedorController
          - int _fornecedorId
          - Fornecedor _fornecedor
          + ConsultaFornecedorForm(FornecedorController fornecedorController, int fornecedorId)
          + void ResizeForm(object sender, EventArgs e)
          + async void ConsultaFornecedorForm_Load(object sender, EventArgs e)
          - void PopulaCampos(Endereco endereco, Fornecedor fornecedor)
          - void btnFechar_Click(object sender, EventArgs e)
        }

        class ExcluirFornecedorForm {
          - FornecedorController _fornecedorController
          - int _fornecedorId
          - Fornecedor _fornecedor
          + ExcluirFornecedorForm(FornecedorController fornecedorController, int fornecedorId)
          + void ResizeForm(object sender, EventArgs e)
          + async void ExcluirFornecedorForm_Load(object sender, EventArgs e)
          - void PopulaCampos(Endereco endereco, Fornecedor fornecedor)
          - void btnCancelar_Click(object sender, EventArgs e)
          - async void btnExcluir_Click(object sender, EventArgs e)
        }

        class FornecedorForm {
          - FornecedorController _fornecedorController
          - string _tipoFornecedor
          + FornecedorForm(FornecedorController fornecedorController, string tipoFornecedor)
          + void ResizeForm(object sender, EventArgs e)
          + async void FornecedorForm_Load(object sender, EventArgs e)
          - async Task CarregarGridFisico()
          - async Task CarregarGridJuridico()
          - async Task CarregarGridGeral()
          - bool VerificarSelecao()
          - async Task VerificarTipoGrid()
          - async void btnCadastrar_Click(object sender, EventArgs e)
          - async void btnAlterar_Click(object sender, EventArgs e)
          - async void btnConsultar_Click(object sender, EventArgs e)
          - async void btnExcluir_Click(object sender, EventArgs e)
          - void btnFechar_Click(object sender, EventArgs e)
        }
    }
}
@enduml